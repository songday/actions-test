name: Tests and release
# on: [push, pull_request]
on:
  push:
  pull_request:
    branches: [main]
    paths-ignore: ["samples/**", "**.md"]
env:
  CRATE_NAME: actionsTest
  GITHUB_TOKEN: ${{ github.token }}
  RUST_BACKTRACE: 1
jobs:
  test:
    name: ${{ matrix.platform.os_name }} with rust ${{ matrix.toolchain }}
    # https://docs.github.com/en/actions/using-jobs/choosing-the-runner-for-a-job#choosing-self-hosted-runners
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os_name: Linux-x86_64
            os: ubuntu-20.04
            target: x86_64-unknown-linux-musl
            bin: actions-test
            name: actionsTest-Linux-x86_64-musl.tar.gz
            skip_tests: true
          - os_name: Windows-x86_64
            os: windows-2019
            target: x86_64-pc-windows-msvc
            bin: actions-test.exe
            name: actionsTest-Windows-x86_64.zip
            skip_tests: true
        toolchain:
          - stable
    steps:
      - uses: actions/checkout@v3
      - name: Cache cargo & target directories
        uses: Swatinem/rust-cache@v2
        with:
          key: "v2"
      - name: Configure Git
        run: |
          git config --global user.email "songday@yeah.net"
          git config --global user.name "Songday"
      - name: Install musl-tools on Linux
        run: sudo apt-get update --yes && sudo apt-get install --yes musl-tools
        if: contains(matrix.platform.name, 'musl')
      - name: Install build-essential on Linux
        run: sudo apt-get install --yes build-essential
        if: contains(matrix.platform.name, 'musl')
      - name: Link g++
        run: sudo ln -s /bin/g++ /bin/musl-g++
        if: contains(matrix.platform.name, 'musl')
      - name: Install rust target
        run: rustup target add ${{ matrix.platform.target }} --toolchain ${{ matrix.toolchain }}
      - name: Build binary
        run: cargo build --release --verbose --target ${{ matrix.platform.target }}
        # uses: houseabsolute/actions-rust-cross@v0
        # with:
        #   command: "build"
        #   target: ${{ matrix.platform.target }}
        #   toolchain: ${{ matrix.toolchain }}
        #   # args: "--locked --release"
        #   args: "--release"
        #   strip: false
      - name: Run tests
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: "test"
          target: ${{ matrix.platform.target }}
          toolchain: ${{ matrix.toolchain }}
          # args: "--locked --release"
          args: "--release"
        if: ${{ !matrix.platform.skip_tests }}
      - name: Package as archive
        shell: bash
        run: |
          cd target/${{ matrix.platform.target }}/release
          osstr="${{ matrix.platform.os }}"
          if [[ "${osstr:0:7}" == "windows" ]]; then
            7z a ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          else
            tar czvf ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          fi
          cd -
        if: matrix.toolchain == 'stable'
        # if: |
        #   matrix.toolchain == 'stable' &&
        #   ( startsWith( github.ref, 'refs/tags/v' ) ||
        #     github.ref == 'refs/tags/test-release' )
      - name: Publish release artifacts
        uses: actions/upload-artifact@v3
        with:
          name: actionsTest-${{ matrix.platform.os_name }}
          path: "actions-test-*"
        # if: matrix.toolchain == 'stable' && github.ref == 'refs/tags/test-release'
        if: matrix.toolchain == 'stable'
